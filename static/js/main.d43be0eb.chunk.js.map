{"version":3,"sources":["components/todo.js","components/todolist.js","App.js","index.js"],"names":["Todo","props","todo","handleDoneClick","handleDeleteClick","className","task","onClick","TodoList","useState","todoList","completed","inputValue","error","todoListState","setTodoList","handleAddClick","some","handleDone","find","console","log","handleRemove","filter","placeholder","onChange","e","target","value","onKeyPress","key","map","id","App","ReactDOM","render","document","getElementById"],"mappings":"+TAwBeA,MAtBf,SAAcC,GAAQ,IACbC,EAA4CD,EAA5CC,KAAMC,EAAsCF,EAAtCE,gBAAiBC,EAAqBH,EAArBG,kBAE9B,OACE,yBAAKC,UAAU,QACZH,EAAKI,KACN,4BACED,UAAU,OACVE,QAAS,kBAAMJ,EAAgBD,EAAKI,QAFtC,UAMA,4BACED,UAAU,SACVE,QAAS,kBAAMH,EAAkBF,EAAKI,QAFxC,Y,ykBCgGSE,MA3Gf,WAAqB,IAAD,EACiBC,mBAAS,CAACC,SAAS,CAAC,CAACJ,KAAM,iCAAkCK,WAAW,GAAO,CAACL,KAAM,qBAAsBK,WAAW,IAAQC,WAAY,GAAIC,MAAO,KADvK,mBACbC,EADa,KACEC,EADF,KAEZL,EAAgCI,EAAhCJ,SAAUE,EAAsBE,EAAtBF,WAAYC,EAAUC,EAAVD,MAiBtBG,EAAiB,WAChBJ,IAEFF,EAASO,MAAK,SAACf,GAAD,OAASA,EAAKI,OAASM,KACtCG,EAAY,EAAD,GACND,EADM,CAETD,MAAO,sCAKXE,EAAY,CACVL,SAAS,GAAD,mBAAMA,GAAN,CAAe,CAACJ,KAAMM,EAAYD,WAAW,KACrDC,WAAY,GACZC,MAAO,OAILK,EAAa,SAACZ,GAClBS,EAAY,EAAD,GACND,IAGLJ,EAASS,MAAK,SAACjB,GACVA,EAAKI,OAASA,IACfJ,EAAKS,WAAaT,EAAKS,cAI3BS,QAAQC,IAAIX,IAGRY,EAAe,SAAChB,GACpBS,EAAY,EAAD,GACND,EADM,CAETJ,SAAWA,EAASa,QAAO,SAACrB,GAAD,OAAUA,EAAKI,OAASA,SAKvD,OACE,yBAAKD,UAAU,cACb,2BACEA,UAAU,YACVmB,YAAa,8BACbC,SA1DoB,SAACC,GACzBX,EAAY,EAAD,GACND,EADM,CAETF,WAAYc,EAAEC,OAAOC,UAwDnBC,WApDmB,SAACH,GACX,UAAVA,EAAEI,KACHd,KAmDEY,MAAOhB,IAET,4BACEP,UAAU,UACVuB,MAAM,MACNrB,QAASS,GAHX,OAQGH,GACD,uBAAGR,UAAU,SAASQ,GAGxB,0BAAMR,UAAU,SACbK,EAASqB,KAAI,SAAC7B,EAAM8B,GACnB,OAAO9B,EAAKS,WACZ,kBAAC,EAAD,CACET,KAAMA,EACN4B,IAAKE,EACL7B,gBAAiBe,EACjBd,kBAAmBkB,QAIzB,yBAAKjB,UAAU,aACZK,EAASqB,KAAI,SAAC7B,EAAM8B,GACnB,OAAQ9B,EAAKS,WACb,kBAAC,EAAD,CACET,KAAMA,EACN4B,IAAKE,EACL7B,gBAAiBe,EACjBd,kBAAmBkB,UCnFhBW,MARf,WACE,OACE,yBAAK5B,UAAU,OACb,kBAAC,EAAD,QCRN6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d43be0eb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Todo(props) {\r\n  const {todo, handleDoneClick, handleDeleteClick} = props;\r\n  \r\n  return (\r\n    <div className=\"todo\">\r\n      {todo.task}\r\n      <button\r\n        className=\"done\"\r\n        onClick={() => handleDoneClick(todo.task)}\r\n      >\r\n      ✔\r\n      </button>\r\n      <button\r\n        className=\"remove\"\r\n        onClick={() => handleDeleteClick(todo.task)}\r\n      >\r\n      ✖\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;","import React, { useState, useEffect } from 'react';\r\nimport Todo from './todo';\r\n\r\nfunction TodoList() {\r\n  let [todoListState, setTodoList] = useState({todoList:[{task: 'Dodaj swoje pierwsze zadanie!!', completed: false},{task: 'Wykonane zadanie!!', completed: true}], inputValue: \"\", error: \"\"});\r\n  let { todoList, inputValue, error } = todoListState;\r\n\r\n  \r\n\r\n  const handleInputChange = (e) => {\r\n    setTodoList({\r\n      ...todoListState,\r\n      inputValue: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleInputEnter = (e) => {\r\n    if(e.key === \"Enter\") {\r\n      handleAddClick();\r\n    }\r\n  }\r\n\r\n  const handleAddClick = () => {\r\n    if (!inputValue) return;\r\n\r\n    if(todoList.some((todo)=> todo.task === inputValue)) {\r\n      setTodoList({\r\n        ...todoListState,\r\n        error: \"You have this task in your list!\"\r\n      })\r\n\r\n      return;\r\n    }\r\n    setTodoList({\r\n      todoList: [...todoList,{task: inputValue, completed: false}],\r\n      inputValue: \"\",\r\n      error: \"\"\r\n    })\r\n  }\r\n\r\n  const handleDone = (task) => {\r\n    setTodoList({\r\n      ...todoListState\r\n    })\r\n    \r\n    todoList.find((todo) => {\r\n      if(todo.task === task) {\r\n        todo.completed = !todo.completed;\r\n      }\r\n    })\r\n\r\n    console.log(todoList)\r\n  }\r\n\r\n  const handleRemove = (task) => {\r\n    setTodoList({\r\n      ...todoListState,\r\n      todoList: (todoList.filter((todo) => todo.task !== task))\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"myTodoList\">\r\n      <input\r\n        className=\"writeTask\"\r\n        placeholder= \"What are we gonna do today?\"\r\n        onChange={handleInputChange}\r\n        onKeyPress={handleInputEnter}\r\n        value={inputValue}\r\n      />\r\n      <button \r\n        className=\"addTask\"\r\n        value=\"Add\"\r\n        onClick={handleAddClick}\r\n      >\r\n        +\r\n      </button>\r\n      \r\n      {!!error &&\r\n        <p className=\"error\">{error}</p>\r\n      }\r\n\r\n      <span className=\"tasks\">\r\n        {todoList.map((todo, id) => {\r\n          return todo.completed || \r\n          <Todo \r\n            todo={todo}\r\n            key={id}\r\n            handleDoneClick={handleDone}\r\n            handleDeleteClick={handleRemove}\r\n          />\r\n        })}\r\n      </span>\r\n      <div className=\"done-list\">\r\n        {todoList.map((todo, id) => {\r\n          return !todo.completed || \r\n          <Todo \r\n            todo={todo}\r\n            key={id}\r\n            handleDoneClick={handleDone}\r\n            handleDeleteClick={handleRemove}\r\n          />\r\n          \r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport \"./App.css\"\nimport \"./styles/todolist.css\"\nimport \"./styles/todo.css\"\nimport \"./styles/error.css\"\nimport \"./styles/doneList.css\"\n\nimport TodoList from \"./components/todolist\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}